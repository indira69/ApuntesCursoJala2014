$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com

$ git config --global core.editor emacs
$ git config –list   //para ver configuración
$ para ver el nombre: git config user.name

http://codehero.co/series/git-desde-cero/
=============================================

Para empezar un repositorio
=====================
git init  --> crea un repo de cero
git clone  url  --> crea un directorio con todo lo del repo clonado

=====================

git add  arch                 --> añade a staged area
git commit -m "nombre commit" -->crea un commit de toda la staged area
git commit -a -m 'nuevo arch' -->hace un commit de todos los archivos que estaban alguna vez en staged y si existen modificaciones añade directamente al commit sin que esten en el staging area
git rm   arch                 -->prepara aarch para borrar, el sgte commit borrara arch del dir
git rm --cached arch          -->hace que ya no se haga seguimiento al archivo arch, es útil si hemos ovidado omitir en .ignore y no queremos subir este archivo, que continuara en mi directorio de trabajo

=====================
git status
git log
git diff
git diff --staged    -->muestra los cambios con lo que esta preparado para commit y working area


=====================
$git log --pretty=format:"%h - %an - %ar - %s" --graph   -->para ver los commits bonitos
$ git commit --amend --no-edit # Dejamos el mismo mensaje  -->para agregar archivos a el último commit ya realizado
$ git commit --amend -m "Nuevo mensaje para el cambio"

git reset HEAD README.md   -->saca readme.md de la lista staged
git checkout -- README.md  --> vuelve readme de mi usr al estado del último commit(quitará de readme.md la modificación anterior)

 
